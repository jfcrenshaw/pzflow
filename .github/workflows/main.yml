# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# inspired by examples here: https://github.com/snok/install-poetry

name: build

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  build:
    # ----------------------------------------------
    #  test linux and mac; several python versions
    # ----------------------------------------------
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9", "3.10", "3.11"]
    runs-on: ${{ matrix.os }}

    steps:
      # ----------------------------------------------
      #               checkout repository
      # ----------------------------------------------
      - name: Check out repo
        uses: actions/checkout@v3

      # ----------------------------------------------
      #         install and configure poetry
      # ----------------------------------------------
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"

      # ----------------------------------------------
      #       install root project, if required
      # ----------------------------------------------
      - name: Install library
        run: poetry install --no-interaction

      # ----------------------------------------------
      #                 run linters
      # ----------------------------------------------
      #- name: Run linters
      #  run: |
      #    poetry run flake8 .
      #    poetry run black . --check
      #    poetry run isort .

      # ----------------------------------------------
      #                 run tests
      # ----------------------------------------------
      - name: Test with pytest
        run: |
          poetry run pytest --cov=./pzflow --cov-report=xml -n 10

      # ----------------------------------------------
      #          upload coverage to Codecov
      # ----------------------------------------------
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: true
